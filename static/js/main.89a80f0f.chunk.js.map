{"version":3,"sources":["components/Filter/Filter.module.css","components/Container/Container.module.css","components/Container/Container.jsx","components/Form/FormHook.jsx","components/Contact/Contacts.jsx","components/Filter/Filter.jsx","App.jsx","components/hooks/useLocalStorage.js","index.js","components/Form/Form.module.css","components/Contact/Contact.module.css"],"names":["module","exports","Container","children","className","s","container","Form","onSubmit","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","reset","form","preventDefault","label","input","type","onChange","pattern","title","required","button","ContactList","contacts","onDeleteContact","list","map","id","item","onClick","Filter","App","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","setContacts","filter","setFilter","visibleContacts","normalizedFilter","toLowerCase","contact","includes","showVisibleContact","task","toast","error","length","nanoid","success","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89a80f0f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__xptlV\",\"title\":\"Filter_title__22ehR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__h_QWw\"};","import s from 'components/Container/Container.module.css';\r\n\r\nconst Container = ({ children }) => {\r\n  return <section className={s.container}>{children}</section>;\r\n};\r\n\r\nexport default Container;\r\n","import { useState } from 'react';\r\nimport s from 'components/Form/Form.module.css';\r\n\r\nexport default function Form({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    onSubmit({ name, number });\r\n\r\n    reset();\r\n  };\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className={s.form} onSubmit={handleSubmit}>\r\n        <label className={s.label}>\r\n          Name\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={handleChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Number\r\n          <input\r\n            className={s.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={handleChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <button className={s.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport s from 'components/Contact/Contact.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ name, number, id }) => (\r\n        <li className={s.item} key={id}>\r\n          {name + ': ' + number}\r\n          <button className={s.button} onClick={() => onDeleteContact(id)}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from 'components/Filter/Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <div>\r\n      <h3 className={s.title}>Find contacts by name</h3>\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","import { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\nimport toast, { Toaster } from 'react-hot-toast';\nimport useLocalStorage from 'components/hooks/useLocalStorage';\nimport Container from './components/Container/Container';\nimport Form from './components/Form/FormHook';\nimport ContactList from 'components/Contact/Contacts';\nimport Filter from 'components/Filter/Filter';\n\nfunction App() {\n  const [contacts, setContacts] = useLocalStorage('contacts', []);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = task => {\n    const searchSameName = contacts\n      .map(contact => contact.name)\n      .includes(task.name);\n\n    if (searchSameName) {\n      toast.error(`${task.name} is already in contacts`);\n    } else if (task.name.length === 0) {\n      toast.error('Fields must be filled!');\n    } else {\n      const contact = {\n        ...task,\n        id: nanoid(),\n      };\n\n      setContacts(contacts => [contact, ...contacts]);\n      toast.success('Done');\n    }\n  };\n\n  const deleteContact = contactId => {\n    setContacts(contacts =>\n      contacts.filter(contact => contact.id !== contactId),\n    );\n  };\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const showVisibleContact = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  const visibleContacts = showVisibleContact();\n\n  return (\n    <div>\n      <Container>\n        <Toaster />\n        <h1>Phonebook</h1>\n        <Form onSubmit={addContact} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={changeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={deleteContact}\n        />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import { useState, useEffect } from 'react';\r\n\r\nexport default function useLocalStorage(key, defaultValue) {\r\n  const [state, setState] = useState(() => {\r\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n\r\n  return [state, setState];\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__21Ve4\",\"label\":\"Form_label__E6Okn\",\"input\":\"Form_input__17yyu\",\"button\":\"Form_button__2NA69\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contact_list__1DMRA\",\"item\":\"Contact_item__oU-Oe\",\"button\":\"Contact_button__3zYop\"};"],"sourceRoot":""}